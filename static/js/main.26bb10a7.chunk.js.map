{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","contactValidation","props","contacts","find","contact","alert","handleSubmit","preventDefault","onSubmit","reset","this","className","styles","form","type","placeholder","onChange","input","label","button","Component","ContactList","onDeleteContact","list","map","id","item","text","onClick","Filter","App","filter","addContact","makeFilter","visibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.26bb10a7.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  contactValidation = () => {\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.find(contact => name === contact.name)) {\n      alert(`${name} is already in contacts`);\n      return true;\n    }\n\n    if (name === '' || number === '') {\n      alert('Please enter contact information');\n      return true;\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (this.contactValidation()) {\n      return;\n    }\n\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({name: '', number: ''});\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Name of contact\"\n            onChange={this.handleChange}\n            className={styles.input}\n          />\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            placeholder=\"Number of contact\"\n            onChange={this.handleChange}\n            className={styles.input}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.item}>\n          <p className={styles.text}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={styles.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};","import PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label>\n      <p>Find contacts by name &nbsp;</p>\n      <input \n       type=\"text\" \n       value={value} \n       placeholder=\"Search\"\n       onChange={onChange} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  makeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  visibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.visibleContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.makeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"text\":\"ContactList_text__2dM24\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}